[program:{{ instance.instance_id }}]
autostart=False
startsec={{ instance.start_sec }}
stopwaitsecs={{ instance.stop_sec }}
{% macro show_cmd(instance_type) %}{% include "cmds/" + instance_type %}{% endmacro %}
command=docker run
    -h {{ "{{ agent.host_name }}" }}.{{ paas.paas_domain }}
    --label={{ instance.instance_id }}
    --rm=true
    --memory-swap=-1
    -m {{ instance.memory_limit }}m
    {%- if instance.port %}
    -p {{ "{{ agent.host_ip }}" }}:{{ instance.port }}:{{ instance.port }}
    {% endif -%}
    -v {{ instance.logs_dir }}:{{ instance.build.app.work_dir}}/log
    {%- for env_name, env_val in instance.env.items() %}
    -e {{ env_name }}={{ env_val }}
    {%- endfor %}
    {{ instance.build.tag }}
    {{ show_cmd(instance.instance_type)|indent(4) }}

stdout_logfile={{ instance.stdlogs_dir }}/stdout.log
stdout_logfile_maxbytes={{ paas.log_max_mb }}MB
stdout_logfile_backups={{ paas.log_backups }}

stderr_logfile={{ instance.stdlogs_dir }}/stderr.log
stderr_logfile_maxbytes={{ paas.log_max_mb}}MB
stderr_logfile_backups={{ paas.log_backups }}

[chulai:{{ instance_id }}]
repo={{ instance.build.repo }}
tag={{ instance.build.commit }}
playground={{ instance.playground }}
start_sec={{ instance.start_sec }}
stop_sec={{ instance.stop_sec }}
memory_limit={{ instance.memory_limit }}
port={{ instance.port }}
envs={{ instance.envs_json }}
